
name: Selenium Test Automation

on:
  push:
    branches:
      - main
      - develop
      - develop-non-docker
      - feature/selenium-only
  pull_request:
    branches:
      - main
      - develop
      - develop-non-docker
      - feature/selenium-only
  workflow_dispatch:
  schedule:
    - cron: '0 */8 * * *' # 실행 시간 설정(UTC)

concurrency:  # 동시에 여러 개의 배포 실행 방지
  group: gh-pages-deploy
  cancel-in-progress: true

jobs:
  selenium_api_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python # 파이썬 설치
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"


      - name: Install Dependencies # 의존성 설치
        run: |
          python -m venv venv
          venv/bin/python -m pip install -r requirements.txt allure-pytest


      - name: Install Allure CLI # Allure CLI 설치
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://github.com/allure-framework/allure2/releases/download/2.32.2/allure-2.32.2.tgz
          tar -zxvf allure-2.32.2.tgz
          sudo mv allure-2.32.2 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version
          
      - name: Fetch Allure Report from gh-pages
        run: |
          git fetch origin gh-pages
          mkdir -p allure-report
          git checkout gh-pages -- allure-report || true
          ls -al allure-report || echo "❌ allure-report 디렉토리가 없습니다!"
          
      - name: Force Update GitHub Pages
        run: echo $(date) > allure-report/timestamp.txt


      - name: Clean previous Allure results # 기존 allure-results 삭제
        run: rm -rf allure-results/selenium allure-report || true

      - name: Set API Key Environment Variable
        run: echo "TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}" >> $GITHUB_ENV


      - name: Run Selenium Tests # 테스트 실행
        run: |
          mkdir -p allure-results/selenium
          venv/bin/python -m pytest src/tests/ui_tests --alluredir=allure-results/selenium
        continue-on-error: true


      - name: Clone gh-pages
        run: |
          git fetch origin gh-pages
          git checkout gh-pages || git checkout --orphan gh-pages
          

      - name: Generate Allure Report
        run: |
          mkdir -p allure-report
          allure generate allure-results/selenium -o allure-report --clean || echo "❌ Allure report 생성 실패!"
          mkdir -p allure-report/history
          ls -al allure-report || echo "❌ allure-report 폴더가 없습니다!"
          

      - name: Debug Allure Results  # 테스트 결과 확인
        run: ls -al allure-results/selenium || echo "❌ allure-results 디렉토리가 없습니다!"

      - name: Force Update GitHub Pages
        run: echo $(date) > allure-report/timestamp.txt


      - name: Upload Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: .
          keep_files: true


      - name: Send Slack Notification # Slack 알람
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.QA_SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: "GitHub Actions"
          SLACK_ICON_EMOJI: ":robot_face:"
          SLACK_TITLE: "✅ Selenium & API Test 완료"
          SLACK_MESSAGE: |
            *📢 Selenium UI 테스트가 끝났습니다!*
            *📄 Allure Report *: <https://yoplekiller.github.io/QATEST/allure-report/index.html>
          SLACK_COLOR: "#36a64f"