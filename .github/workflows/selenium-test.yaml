- name: Run Selenium Tests #테스트 실행
  run: |
    mkdir -p allure-results
    venv/bin/python -m pytest src/tests/ui_tests --alluredir=$(pwd)/allure-results

- name: Verify allure-results exists
  run: |
    if [ -d "allure-results" ] && [ "$(ls -A allure-results)" ]; then
      echo "✅ allure-results directory exists and is not empty."
    else
      echo "❌ allure-results directory is missing or empty!"
      exit 1
    fi

- name: Generate Allure Report
  run: |
    allure generate allure-results -o allure-report --clean
    ls -l allure-report || echo "❌ allure-report directory is missing!"

- name: Upload Allure Report to GitHub Pages
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_branch: gh-pages
    publish_dir: ./allure-report  # ✅ 올바른 경로 설정
    keep_files: true

- name: Debug GitHub Pages Deployment
  run: |
    git fetch origin gh-pages
    git checkout gh-pages
    ls -l
    ls -l allure-report

- name: Upload Allure Report Artifact
  uses: actions/upload-artifact@v4
  with:
    name: allure-report
    path: allure-report

- name: Get Artifact Download Link
  run: echo "ARTIFACT_URL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

- name: Send Slack Notification
  uses: rtCamp/action-slack-notify@v2
  env:
    SLACK_WEBHOOK: ${{ secrets.QA_SLACK_WEBHOOK_URL }}
    SLACK_USERNAME: "GitHub Actions"
    SLACK_ICON_EMOJI: ":robot_face:"
    SLACK_TITLE: "✅ Selenium Test 완료"
    SLACK_MESSAGE: |
      *📢 Selenium UI 테스트가 끝났습니다!*
      *📄 Allure Report (웹)*: <https://yoplekiller.github.io/QATEST/allure-report/index.html>
      *📂 Allure Report (다운로드)*: <${{ env.ARTIFACT_URL }}>
      🕒 수행 시간: `${{ env.time }}`
    SLACK_COLOR: "#36a64f"
