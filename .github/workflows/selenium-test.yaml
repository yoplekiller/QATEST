name: Selenium Test Automation

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 */4 * * *' # 실행 시간 설정(UTC)
  #  push:
  #    branches:
  #      - main
jobs:
  selenium-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Create virtual environment
        run: python -m venv venv

      - name: Install Dependencies
        run: venv/bin/python -m pip install -r requirements.txt allure-pytest
        
      - name: Capture start time  #테스트 시작 시간
        id: start-time
        run: echo "start=$(date +%s)" >> $GITHUB_ENV

      - name: Run Selenium Tests #테스트 실행
        run: |
          pwd
          mkdir -p allure-results
          venv/bin/python -m pytest src/tests/ui_tests --alluredir=allure-results

      - name: Ensure allure-results exists
        run: mkdir -p allure-results

      - name: Ensure allure-report directory exists
        run: mkdir -p allure-report

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://github.com/allure-framework/allure2/releases/download/2.19.0/allure-2.19.0.tgz
          tar -zxvf allure-2.19.0.tgz
          sudo mv allure-2.19.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          

      - name: Generate Allure Report
        run: allure generate allure-results -o allure-results --clean
          

      - name: Capture end time and calculate duration #수행시간
        id: test-duration
        run: |
          end=$(date +%s)
          duration=$((end - ${{ env.start }}))
          echo "time=${duration}초" >> $GITHUB_ENV    
          

      - name: Upload Allure Report to GitHub Pages #리포트 업로드
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report  #현재 디렉토리 내의 모든 파일을 업로드
          keep_files: true #기존파일 유지

      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Send Slack Notification # Slack 알람
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.QA_SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: "GitHub Actions"
          SLACK_ICON_EMOJI: ":robot_face:"
          SLACK_TITLE: "✅ Selenium Test 완료"
          SLACK_MESSAGE: |
            *📢 Selenium UI 테스트가 끝났습니다!*
            *📄 Allure Report (웹)*: <https://yoplekiller.github.io/QATEST/allure-report/index.html>
            *📂 Allure Report (다운로드)*: <https://github.com/QATEST/actions/runs/${{ github.run_id }}>
            🕒 수행 시간: `${{ env.time }}`
          SLACK_COLOR: "#36a64f"
