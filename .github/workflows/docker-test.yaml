name: Docker Test Automation

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
#  schedule:
#    - cron: '0 */8 * * *' # 실행 시간 설정(UTC)
  #  push:
  #    branches:
  #      - main
jobs:
  selenium-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Docker & Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose


      - name: Build and Start Containers
        run: |
          docker compose up -d
          sleep 10

      - name: Capture start time
        id: start-time
        run: echo "start=$(date +%s)" >> $GITHUB_ENV

      - name: Run Selenium Tests
        run: docker exec selenium-container pytest src/tests/ui_tests --html=ui_report.html --self-contained-html

      - name: Stop and Remove Containers
        if: always()
        run: docker compose down

      - name: Capture end time and calculate duration #수행시간
        id: test-duration
        run: |
          end=$(date +%s)
          duration=$((end - ${{ env.start }}))
          echo "time=${duration}초" >> $GITHUB_ENV    

      - name: Upload HTML report to Github Pages #리포트 업로드
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: . #현재 디렉토리 내의 모든 파일을 업로드
          keep_files: true #기존파일 유지

      - name: Send Slack Notification # Slack 알람
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.QA_SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: "GitHub Actions"
          SLACK_ICON_EMOJI: ":robot_face:"
          SLACK_TITLE: "✅ Selenium Test 완료"
          SLACK_MESSAGE: |
            *📢 Selenium UI 테스트가 끝났습니다!*
            *📄 리포트 확인*: <https://yoplekiller.github.io/QATEST/ui_report.html>
            🕒 수행 시간: `${{ env.time }}`
          SLACK_COLOR: "#36a64f"
