name: Docker Test Automation

on:
#  push:
#    branches:
#      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
#  schedule:
#    - cron: '0 */8 * * *' # 실행 시간 설정(UTC)

concurrency:             #동시에 여러 개의 배포 실행 방지
  group: gh-pages-deploy
  cancel-in-progress: false

jobs:
  docker-tests:
    runs-on: ubuntu-latest
    services:
      selenium-hub:
        image: selenium/hub:4.6.0
        ports:
          - 4444:4444

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Docker & Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and Start Containers
        run: |
          docker compose up -d
          sleep 10

      - name: Build Docker image
        run: |
          docker build -t test-runner .

      - name: Remove old container if exists
        run: docker rm -f test-runner || true

      - name: Run Docker container
        run: |
          docker run -dit \
            --name test-runner test-runner \
            -v ${{ github.workspace}}/allure-results/docker:/app/allure-results \
            test-runner
          

      - name: Set API Key Environment Variable
        run: echo "TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}" >> $GITHUB_ENV


      - name: Run Docker Selenium Tests
        run: |
          docker exec test-runner pytest src/tests/ui_tests --alluredir=/app/allure-results || true

      - name: Run API Tests
        run: |
          venv/bin/python -m pytest src/tests/api_tests --alluredir=/app/allure-results || true

      - name: Debug allure-results contents
        run: ls -R allure-results/docker || echo "❌ No Allure results found"

      - name: Capture start time
        id: start-time
        run: echo "start=$(date +%s)" >> $GITHUB_ENV


      - name: Stop and Remove Containers
        if: always()
        run: docker compose down

      - name: Install Allure CLI # Allure CLI 설치
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://github.com/allure-framework/allure2/releases/download/2.32.2/allure-2.32.2.tgz
          tar -zxvf allure-2.32.2.tgz
          sudo mv allure-2.32.2 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version


      - name: Generate Allure Report
        run: |
          mkdir -p allure-report/docker
          allure generate allure-results/docker -o allure-report/docker --clean || echo "❌ Report 생성 실패"


      - name: Force Update GitHub Pages
        run: echo $(date) > allure-report/timestamp.txt


      - name: Upload Allure report to Github Pages #리포트 업로드
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report/docker
          destination_dir: docker
          keep_files: true #기존파일 유지


      - name: Send Slack Notification # Slack 알람
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.QA_SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: "GitHub Actions"
          SLACK_ICON_EMOJI: ":robot_face:"
          SLACK_TITLE: "✅ Docker Test 완료"
          SLACK_MESSAGE: |
            *📢 Docker Test 테스트가 끝났습니다!*
            *📄 리포트 확인*: <https://yoplekiller.github.io/QATEST/docker/index.html>
          SLACK_COLOR: "#36a64f"

      - name: Check available memory
        run: free -h
