{"uid":"2e694c8a90262af2","name":"잘못된 ID,PW 입력 시 로그인이 실패하는지 확인","fullName":"src.tests.ui_tests.test_ui_login#test_login","historyId":"98e8f149c7227721782a965f730ba74a","time":{"start":1743522404374,"stop":1743522406367,"duration":1993},"status":"failed","statusMessage":"Failed: ❌ 로그인 실패 :Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[contains(text(),'로그인')]\"}\n  (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x5645b9cbcffa <unknown>\n#1 0x5645b977b970 <unknown>\n#2 0x5645b97cd385 <unknown>\n#3 0x5645b97cd5b1 <unknown>\n#4 0x5645b981c3c4 <unknown>\n#5 0x5645b97f32bd <unknown>\n#6 0x5645b981970c <unknown>\n#7 0x5645b97f3063 <unknown>\n#8 0x5645b97bf328 <unknown>\n#9 0x5645b97c0491 <unknown>\n#10 0x5645b9c8442b <unknown>\n#11 0x5645b9c882ec <unknown>\n#12 0x5645b9c6ba22 <unknown>\n#13 0x5645b9c88e64 <unknown>\n#14 0x5645b9c4fbef <unknown>\n#15 0x5645b9cab558 <unknown>\n#16 0x5645b9cab736 <unknown>\n#17 0x5645b9cbbe76 <unknown>\n#18 0x7f843349caa4 <unknown>\n#19 0x7f8433529c3c <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b5e213b28cbb04a9bf885cf07976ecc8\")>\n\n    @allure.feature(\"예외 케이스\")\n    @allure.story(\"잘못된 ID,PW 입력\")\n    @allure.title(\"잘못된 ID,PW 입력 시 로그인이 실패하는지 확인\")\n    def test_login(driver):\n        driver.get(\"https://www.kurly.com/main\")\n        driver.maximize_window()\n    \n        try:\n            # 로그인 버튼 클릭\n>           login_button = driver.find_element(By.XPATH, \"//a[contains(text(),'로그인')]\")\n\nsrc/tests/ui_tests/test_ui_login.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9ffd9a3790>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x5645b9cbbe76 \\\\u003Cunknown>\\\\n#18 0x7f843349caa4 \\\\u003Cunknown>\\\\n#19 0x7f8433529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[contains(text(),'로그인')]\"}\nE         (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x5645b9cbcffa <unknown>\nE       #1 0x5645b977b970 <unknown>\nE       #2 0x5645b97cd385 <unknown>\nE       #3 0x5645b97cd5b1 <unknown>\nE       #4 0x5645b981c3c4 <unknown>\nE       #5 0x5645b97f32bd <unknown>\nE       #6 0x5645b981970c <unknown>\nE       #7 0x5645b97f3063 <unknown>\nE       #8 0x5645b97bf328 <unknown>\nE       #9 0x5645b97c0491 <unknown>\nE       #10 0x5645b9c8442b <unknown>\nE       #11 0x5645b9c882ec <unknown>\nE       #12 0x5645b9c6ba22 <unknown>\nE       #13 0x5645b9c88e64 <unknown>\nE       #14 0x5645b9c4fbef <unknown>\nE       #15 0x5645b9cab558 <unknown>\nE       #16 0x5645b9cab736 <unknown>\nE       #17 0x5645b9cbbe76 <unknown>\nE       #18 0x7f843349caa4 <unknown>\nE       #19 0x7f8433529c3c <unknown>\n\nvenv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b5e213b28cbb04a9bf885cf07976ecc8\")>\n\n    @allure.feature(\"예외 케이스\")\n    @allure.story(\"잘못된 ID,PW 입력\")\n    @allure.title(\"잘못된 ID,PW 입력 시 로그인이 실패하는지 확인\")\n    def test_login(driver):\n        driver.get(\"https://www.kurly.com/main\")\n        driver.maximize_window()\n    \n        try:\n            # 로그인 버튼 클릭\n            login_button = driver.find_element(By.XPATH, \"//a[contains(text(),'로그인')]\")\n            login_button.click()\n            time.sleep(2)\n    \n            #아이디 패스워드 입력\n            login_username_input = driver.find_element(By.NAME, \"id\")\n            login_password_input = driver.find_element(By.ID, \"pw\")\n            login_submit_button = driver.find_element(By.ID,\"log.login\")\n            time.sleep(2)\n    \n            login_username_input.clear()\n            login_password_input.clear()\n    \n            login_username_input.send_keys('boksoon8')\n            login_password_input.send_keys('1232133123')\n            login_submit_button.click()\n            time.sleep(3)\n        except Exception as e:\n            capture_screenshot(driver, \"로그인\", \"screenshots_login\")\n>           pytest.fail(f\"❌ 로그인 실패 :{str(e)}\")\nE           Failed: ❌ 로그인 실패 :Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[contains(text(),'로그인')]\"}\nE             (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE           Stacktrace:\nE           #0 0x5645b9cbcffa <unknown>\nE           #1 0x5645b977b970 <unknown>\nE           #2 0x5645b97cd385 <unknown>\nE           #3 0x5645b97cd5b1 <unknown>\nE           #4 0x5645b981c3c4 <unknown>\nE           #5 0x5645b97f32bd <unknown>\nE           #6 0x5645b981970c <unknown>\nE           #7 0x5645b97f3063 <unknown>\nE           #8 0x5645b97bf328 <unknown>\nE           #9 0x5645b97c0491 <unknown>\nE           #10 0x5645b9c8442b <unknown>\nE           #11 0x5645b9c882ec <unknown>\nE           #12 0x5645b9c6ba22 <unknown>\nE           #13 0x5645b9c88e64 <unknown>\nE           #14 0x5645b9c4fbef <unknown>\nE           #15 0x5645b9cab558 <unknown>\nE           #16 0x5645b9cab736 <unknown>\nE           #17 0x5645b9cbbe76 <unknown>\nE           #18 0x7f843349caa4 <unknown>\nE           #19 0x7f8433529c3c <unknown>\n\nsrc/tests/ui_tests/test_ui_login.py:35: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Failed: ❌ 로그인 실패 :Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[contains(text(),'로그인')]\"}\n  (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x5645b9cbcffa <unknown>\n#1 0x5645b977b970 <unknown>\n#2 0x5645b97cd385 <unknown>\n#3 0x5645b97cd5b1 <unknown>\n#4 0x5645b981c3c4 <unknown>\n#5 0x5645b97f32bd <unknown>\n#6 0x5645b981970c <unknown>\n#7 0x5645b97f3063 <unknown>\n#8 0x5645b97bf328 <unknown>\n#9 0x5645b97c0491 <unknown>\n#10 0x5645b9c8442b <unknown>\n#11 0x5645b9c882ec <unknown>\n#12 0x5645b9c6ba22 <unknown>\n#13 0x5645b9c88e64 <unknown>\n#14 0x5645b9c4fbef <unknown>\n#15 0x5645b9cab558 <unknown>\n#16 0x5645b9cab736 <unknown>\n#17 0x5645b9cbbe76 <unknown>\n#18 0x7f843349caa4 <unknown>\n#19 0x7f8433529c3c <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b5e213b28cbb04a9bf885cf07976ecc8\")>\n\n    @allure.feature(\"예외 케이스\")\n    @allure.story(\"잘못된 ID,PW 입력\")\n    @allure.title(\"잘못된 ID,PW 입력 시 로그인이 실패하는지 확인\")\n    def test_login(driver):\n        driver.get(\"https://www.kurly.com/main\")\n        driver.maximize_window()\n    \n        try:\n            # 로그인 버튼 클릭\n>           login_button = driver.find_element(By.XPATH, \"//a[contains(text(),'로그인')]\")\n\nsrc/tests/ui_tests/test_ui_login.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9ffd9a3790>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x5645b9cbbe76 \\\\u003Cunknown>\\\\n#18 0x7f843349caa4 \\\\u003Cunknown>\\\\n#19 0x7f8433529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[contains(text(),'로그인')]\"}\nE         (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x5645b9cbcffa <unknown>\nE       #1 0x5645b977b970 <unknown>\nE       #2 0x5645b97cd385 <unknown>\nE       #3 0x5645b97cd5b1 <unknown>\nE       #4 0x5645b981c3c4 <unknown>\nE       #5 0x5645b97f32bd <unknown>\nE       #6 0x5645b981970c <unknown>\nE       #7 0x5645b97f3063 <unknown>\nE       #8 0x5645b97bf328 <unknown>\nE       #9 0x5645b97c0491 <unknown>\nE       #10 0x5645b9c8442b <unknown>\nE       #11 0x5645b9c882ec <unknown>\nE       #12 0x5645b9c6ba22 <unknown>\nE       #13 0x5645b9c88e64 <unknown>\nE       #14 0x5645b9c4fbef <unknown>\nE       #15 0x5645b9cab558 <unknown>\nE       #16 0x5645b9cab736 <unknown>\nE       #17 0x5645b9cbbe76 <unknown>\nE       #18 0x7f843349caa4 <unknown>\nE       #19 0x7f8433529c3c <unknown>\n\nvenv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b5e213b28cbb04a9bf885cf07976ecc8\")>\n\n    @allure.feature(\"예외 케이스\")\n    @allure.story(\"잘못된 ID,PW 입력\")\n    @allure.title(\"잘못된 ID,PW 입력 시 로그인이 실패하는지 확인\")\n    def test_login(driver):\n        driver.get(\"https://www.kurly.com/main\")\n        driver.maximize_window()\n    \n        try:\n            # 로그인 버튼 클릭\n            login_button = driver.find_element(By.XPATH, \"//a[contains(text(),'로그인')]\")\n            login_button.click()\n            time.sleep(2)\n    \n            #아이디 패스워드 입력\n            login_username_input = driver.find_element(By.NAME, \"id\")\n            login_password_input = driver.find_element(By.ID, \"pw\")\n            login_submit_button = driver.find_element(By.ID,\"log.login\")\n            time.sleep(2)\n    \n            login_username_input.clear()\n            login_password_input.clear()\n    \n            login_username_input.send_keys('boksoon8')\n            login_password_input.send_keys('1232133123')\n            login_submit_button.click()\n            time.sleep(3)\n        except Exception as e:\n            capture_screenshot(driver, \"로그인\", \"screenshots_login\")\n>           pytest.fail(f\"❌ 로그인 실패 :{str(e)}\")\nE           Failed: ❌ 로그인 실패 :Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[contains(text(),'로그인')]\"}\nE             (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE           Stacktrace:\nE           #0 0x5645b9cbcffa <unknown>\nE           #1 0x5645b977b970 <unknown>\nE           #2 0x5645b97cd385 <unknown>\nE           #3 0x5645b97cd5b1 <unknown>\nE           #4 0x5645b981c3c4 <unknown>\nE           #5 0x5645b97f32bd <unknown>\nE           #6 0x5645b981970c <unknown>\nE           #7 0x5645b97f3063 <unknown>\nE           #8 0x5645b97bf328 <unknown>\nE           #9 0x5645b97c0491 <unknown>\nE           #10 0x5645b9c8442b <unknown>\nE           #11 0x5645b9c882ec <unknown>\nE           #12 0x5645b9c6ba22 <unknown>\nE           #13 0x5645b9c88e64 <unknown>\nE           #14 0x5645b9c4fbef <unknown>\nE           #15 0x5645b9cab558 <unknown>\nE           #16 0x5645b9cab736 <unknown>\nE           #17 0x5645b9cbbe76 <unknown>\nE           #18 0x7f843349caa4 <unknown>\nE           #19 0x7f8433529c3c <unknown>\n\nsrc/tests/ui_tests/test_ui_login.py:35: Failed","steps":[],"attachments":[{"name":"Failure Screenshot","type":"image/png","size":0},{"name":"stdout","type":"text/plain","size":0}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"예외 케이스"},{"name":"story","value":"잘못된 ID,PW 입력"},{"name":"parentSuite","value":"src.tests.ui_tests"},{"name":"suite","value":"test_ui_login"},{"name":"host","value":"fv-az1755-999"},{"name":"thread","value":"2490-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.ui_tests.test_ui_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2e694c8a90262af2.json","parameterValues":[]}