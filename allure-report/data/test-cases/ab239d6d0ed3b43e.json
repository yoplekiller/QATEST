{"uid":"ab239d6d0ed3b43e","name":"API 키가 잘못 되었을 때 401 Unauthorized 확인","fullName":"src.tests.api_tests.test_moive_invalid_api_key#test_movie_invalid_api_key","historyId":"a386eac7b0b41582b56dc8e54e039987","time":{"start":1746238403513,"stop":1746238403624,"duration":111},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api.themoviedb.org/3/search/movie?api_key=invalid_key&query=Inception","statusTrace":"@allure.feature(\"예외 케이스\")\n    @allure.story(\"잘못된 API 키\")\n    @allure.title(\"API 키가 잘못 되었을 때 401 Unauthorized 확인\")\n    def test_movie_invalid_api_key():\n    \n        endpoint = \"/search/movie\"\n        params = {\n            \"api_key\": \"invalid_key\",\n            \"query\": \"Inception\"\n        }\n>       response = send_get_request(endpoint, params)\n\nsrc/tests/api_tests/test_moive_invalid_api_key.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/api_utils.py:16: in send_get_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api.themoviedb.org/3/search/movie?api_key=invalid_key&query=Inception\n\nvenv/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api.themoviedb.org/3/search/movie?api_key=invalid_key&query=Inception","statusTrace":"@allure.feature(\"예외 케이스\")\n    @allure.story(\"잘못된 API 키\")\n    @allure.title(\"API 키가 잘못 되었을 때 401 Unauthorized 확인\")\n    def test_movie_invalid_api_key():\n    \n        endpoint = \"/search/movie\"\n        params = {\n            \"api_key\": \"invalid_key\",\n            \"query\": \"Inception\"\n        }\n>       response = send_get_request(endpoint, params)\n\nsrc/tests/api_tests/test_moive_invalid_api_key.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/api_utils.py:16: in send_get_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api.themoviedb.org/3/search/movie?api_key=invalid_key&query=Inception\n\nvenv/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","steps":[{"name":"GET 요청 보내기","time":{"start":1746238403513,"stop":1746238403623,"duration":110},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api.themoviedb.org/3/search/movie?api_key=invalid_key&query=Inception\n","statusTrace":"  File \"/home/runner/work/QATEST/QATEST/venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/QATEST/QATEST/utils/api_utils.py\", line 16, in send_get_request\n    response.raise_for_status()\n  File \"/home/runner/work/QATEST/QATEST/venv/lib/python3.11/site-packages/requests/models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[{"name":"API 응답 결과 첨부","time":{"start":1746238403623,"stop":1746238403623,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"9e79038bc4f1680","name":"응답 JSON","source":"9e79038bc4f1680.json","type":"application/json","size":115}],"parameters":[{"name":"response","value":"<Response [401]>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[{"name":"GET 요청 에러","type":"text/plain","size":0}],"parameters":[{"name":"endpoint","value":"'/search/movie'"},{"name":"params","value":"{'api_key': 'invalid_key', 'query': 'Inception'}"},{"name":"headers","value":"None"}],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"잘못된 API 키"},{"name":"feature","value":"예외 케이스"},{"name":"parentSuite","value":"src.tests.api_tests"},{"name":"suite","value":"test_moive_invalid_api_key"},{"name":"host","value":"fv-az2207-486"},{"name":"thread","value":"2647-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.api_tests.test_moive_invalid_api_key"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ab239d6d0ed3b43e.json","parameterValues":[]}