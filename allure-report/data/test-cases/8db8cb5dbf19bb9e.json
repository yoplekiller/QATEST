{"uid":"8db8cb5dbf19bb9e","name":"test_fail_screenshot","fullName":"src.tests.ui_tests.test_fail_screenshot#test_fail_screenshot","historyId":"295b0300b44e64aac7e9de8f2dd396ad","time":{"start":1743197350871,"stop":1743197350871,"duration":0},"description":"\n    일부러 실패하게 만드는 테스트\n    - 올바르지 않은 요소 선택\n    - 검색창이 없는 요소를 클릭 시도하여 실패 유발\n    ","descriptionHtml":"<pre><code>일부러 실패하게 만드는 테스트\n- 올바르지 않은 요소 선택\n- 검색창이 없는 요소를 클릭 시도하여 실패 유발\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='gnb_search']\"}\n  (Session info: chrome=134.0.6998.88); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x5567f1d3dffa <unknown>\n#1 0x5567f17fc970 <unknown>\n#2 0x5567f184e385 <unknown>\n#3 0x5567f184e5b1 <unknown>\n#4 0x5567f189d3c4 <unknown>\n#5 0x5567f18742bd <unknown>\n#6 0x5567f189a70c <unknown>\n#7 0x5567f1874063 <unknown>\n#8 0x5567f1840328 <unknown>\n#9 0x5567f1841491 <unknown>\n#10 0x5567f1d0542b <unknown>\n#11 0x5567f1d092ec <unknown>\n#12 0x5567f1ceca22 <unknown>\n#13 0x5567f1d09e64 <unknown>\n#14 0x5567f1cd0bef <unknown>\n#15 0x5567f1d2c558 <unknown>\n#16 0x5567f1d2c736 <unknown>\n#17 0x5567f1d3ce76 <unknown>\n#18 0x7f4c9889caa4 <unknown>\n#19 0x7f4c98929c3c <unknown>","statusTrace":"@pytest.fixture(scope=\"module\")\n    def driver():\n        chrome_options = Options()\n    \n        chrome_options.add_argument(\"--disable-dev-shm-usage\") #메모리 부족 방지\n        chrome_options.add_argument(\"--no-sandbox\") #샌드박스 비활성화\n        chrome_options.add_argument(\"--headless=new\") #GUI없는 환경에서도 실행 가능\n        chrome_options.add_argument(\"--disable-gpu\")\n        chrome_options.add_argument(\"--remote-debugging-port=9222\")\n    \n    \n        service_obj = Service(ChromeDriverManager().install())\n        driver = webdriver.Chrome(service=service_obj,options=chrome_options)\n    \n        driver.get(\"https://www.kurly.com/main\")\n        driver.maximize_window()\n>       driver.find_element(By.XPATH,\"//input[@id='gnb_search']\").click()\n\nsrc/tests/ui_tests/conftest.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f21c379bb50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x5567f1d3ce76 \\\\u003Cunknown>\\\\n#18 0x7f4c9889caa4 \\\\u003Cunknown>\\\\n#19 0x7f4c98929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='gnb_search']\"}\nE         (Session info: chrome=134.0.6998.88); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x5567f1d3dffa <unknown>\nE       #1 0x5567f17fc970 <unknown>\nE       #2 0x5567f184e385 <unknown>\nE       #3 0x5567f184e5b1 <unknown>\nE       #4 0x5567f189d3c4 <unknown>\nE       #5 0x5567f18742bd <unknown>\nE       #6 0x5567f189a70c <unknown>\nE       #7 0x5567f1874063 <unknown>\nE       #8 0x5567f1840328 <unknown>\nE       #9 0x5567f1841491 <unknown>\nE       #10 0x5567f1d0542b <unknown>\nE       #11 0x5567f1d092ec <unknown>\nE       #12 0x5567f1ceca22 <unknown>\nE       #13 0x5567f1d09e64 <unknown>\nE       #14 0x5567f1cd0bef <unknown>\nE       #15 0x5567f1d2c558 <unknown>\nE       #16 0x5567f1d2c736 <unknown>\nE       #17 0x5567f1d3ce76 <unknown>\nE       #18 0x7f4c9889caa4 <unknown>\nE       #19 0x7f4c98929c3c <unknown>\n\nvenv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1743197350872,"stop":1743197354784,"duration":3912},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='gnb_search']\"}\n  (Session info: chrome=134.0.6998.88); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x5567f1d3dffa <unknown>\n#1 0x5567f17fc970 <unknown>\n#2 0x5567f184e385 <unknown>\n#3 0x5567f184e5b1 <unknown>\n#4 0x5567f189d3c4 <unknown>\n#5 0x5567f18742bd <unknown>\n#6 0x5567f189a70c <unknown>\n#7 0x5567f1874063 <unknown>\n#8 0x5567f1840328 <unknown>\n#9 0x5567f1841491 <unknown>\n#10 0x5567f1d0542b <unknown>\n#11 0x5567f1d092ec <unknown>\n#12 0x5567f1ceca22 <unknown>\n#13 0x5567f1d09e64 <unknown>\n#14 0x5567f1cd0bef <unknown>\n#15 0x5567f1d2c558 <unknown>\n#16 0x5567f1d2c736 <unknown>\n#17 0x5567f1d3ce76 <unknown>\n#18 0x7f4c9889caa4 <unknown>\n#19 0x7f4c98929c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/QATEST/QATEST/venv/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/QATEST/QATEST/venv/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/QATEST/QATEST/venv/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/QATEST/QATEST/venv/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/QATEST/QATEST/venv/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/QATEST/QATEST/src/tests/ui_tests/conftest.py\", line 27, in driver\n    driver.find_element(By.XPATH,\"//input[@id='gnb_search']\").click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/QATEST/QATEST/venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 770, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/QATEST/QATEST/venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/work/QATEST/QATEST/venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"UI 테스트"},{"name":"story","value":"검색창 실패 테스트"},{"name":"parentSuite","value":"src.tests.ui_tests"},{"name":"suite","value":"test_fail_screenshot"},{"name":"host","value":"fv-az1784-745"},{"name":"thread","value":"2515-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.ui_tests.test_fail_screenshot"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"8db8cb5dbf19bb9e.json","parameterValues":[]}