{"uid":"b79ec7ddba42fd37","name":"입력된 상품명으로 검색 시 검색되는지 확인","fullName":"src.tests.ui_tests.test_ui_search#test_product_search","historyId":"d923ef0e297c5c75d4e16f4f94193b47","time":{"start":1746701588024,"stop":1746701595528,"duration":7504},"status":"failed","statusMessage":"Failed: ❌ 검색 실패: ❌ 검색어 '과자세트'에 대한 검색 결과가 없음.\nassert 0 > 0\n +  where 0 = len([])","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"644934caa593ba19601ebc65914edb4b\")>\ntc_id = 'TC_007', search_term = '과자세트'\n\n    @allure.feature(\"UI 테스트\")\n    @allure.story(\"상품 검색 테스트\")\n    @allure.title(\"입력된 상품명으로 검색 시 검색되는지 확인\" )\n    @pytest.mark.parametrize(\"tc_id, search_term\", search_cases)\n    def test_product_search(driver, tc_id, search_term):\n        driver.get(\"https://www.kurly.com/main\")\n        time.sleep(2)\n        print(f\"\uD83D\uDD0D TC {tc_id}: '{search_term}' 검색 테스트 실행 중...\")\n        try:\n            search_box = driver.find_element(By.XPATH, \"//input[@placeholder='검색어를 입력해주세요']\")\n            time.sleep(2)\n            for _ in range(10):\n                search_box.send_keys(Keys.BACKSPACE)\n    \n            search_box.send_keys(search_term)\n            search_box.send_keys(Keys.RETURN)\n            time.sleep(2)\n    \n            product_elements = driver.find_elements(By.XPATH,\"//span[@class='css-1qfsi3d e1yof8003']\")\n>           assert len(product_elements) > 0, f\"❌ 검색어 '{search_term}'에 대한 검색 결과가 없음.\"\nE           AssertionError: ❌ 검색어 '과자세트'에 대한 검색 결과가 없음.\nE           assert 0 > 0\nE            +  where 0 = len([])\n\nsrc/tests/ui_tests/test_ui_search.py:31: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"644934caa593ba19601ebc65914edb4b\")>\ntc_id = 'TC_007', search_term = '과자세트'\n\n    @allure.feature(\"UI 테스트\")\n    @allure.story(\"상품 검색 테스트\")\n    @allure.title(\"입력된 상품명으로 검색 시 검색되는지 확인\" )\n    @pytest.mark.parametrize(\"tc_id, search_term\", search_cases)\n    def test_product_search(driver, tc_id, search_term):\n        driver.get(\"https://www.kurly.com/main\")\n        time.sleep(2)\n        print(f\"\uD83D\uDD0D TC {tc_id}: '{search_term}' 검색 테스트 실행 중...\")\n        try:\n            search_box = driver.find_element(By.XPATH, \"//input[@placeholder='검색어를 입력해주세요']\")\n            time.sleep(2)\n            for _ in range(10):\n                search_box.send_keys(Keys.BACKSPACE)\n    \n            search_box.send_keys(search_term)\n            search_box.send_keys(Keys.RETURN)\n            time.sleep(2)\n    \n            product_elements = driver.find_elements(By.XPATH,\"//span[@class='css-1qfsi3d e1yof8003']\")\n            assert len(product_elements) > 0, f\"❌ 검색어 '{search_term}'에 대한 검색 결과가 없음.\"\n    \n            capture_screenshot(driver, f\"{tc_id}_{search_term}_success\", f\"screenshot_search_term\")\n    \n        except Exception as e:\n            capture_screenshot(driver, f\"{tc_id}_{search_term}_failed\", 'screenshots_Search')\n>           pytest.fail(f\"❌ 검색 실패: {str(e)}\")\nE           Failed: ❌ 검색 실패: ❌ 검색어 '과자세트'에 대한 검색 결과가 없음.\nE           assert 0 > 0\nE            +  where 0 = len([])\n\nsrc/tests/ui_tests/test_ui_search.py:37: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1746701540291,"stop":1746701540926,"duration":635},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: ❌ 검색 실패: ❌ 검색어 '과자세트'에 대한 검색 결과가 없음.\nassert 0 > 0\n +  where 0 = len([])","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"644934caa593ba19601ebc65914edb4b\")>\ntc_id = 'TC_007', search_term = '과자세트'\n\n    @allure.feature(\"UI 테스트\")\n    @allure.story(\"상품 검색 테스트\")\n    @allure.title(\"입력된 상품명으로 검색 시 검색되는지 확인\" )\n    @pytest.mark.parametrize(\"tc_id, search_term\", search_cases)\n    def test_product_search(driver, tc_id, search_term):\n        driver.get(\"https://www.kurly.com/main\")\n        time.sleep(2)\n        print(f\"\uD83D\uDD0D TC {tc_id}: '{search_term}' 검색 테스트 실행 중...\")\n        try:\n            search_box = driver.find_element(By.XPATH, \"//input[@placeholder='검색어를 입력해주세요']\")\n            time.sleep(2)\n            for _ in range(10):\n                search_box.send_keys(Keys.BACKSPACE)\n    \n            search_box.send_keys(search_term)\n            search_box.send_keys(Keys.RETURN)\n            time.sleep(2)\n    \n            product_elements = driver.find_elements(By.XPATH,\"//span[@class='css-1qfsi3d e1yof8003']\")\n>           assert len(product_elements) > 0, f\"❌ 검색어 '{search_term}'에 대한 검색 결과가 없음.\"\nE           AssertionError: ❌ 검색어 '과자세트'에 대한 검색 결과가 없음.\nE           assert 0 > 0\nE            +  where 0 = len([])\n\nsrc/tests/ui_tests/test_ui_search.py:31: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"644934caa593ba19601ebc65914edb4b\")>\ntc_id = 'TC_007', search_term = '과자세트'\n\n    @allure.feature(\"UI 테스트\")\n    @allure.story(\"상품 검색 테스트\")\n    @allure.title(\"입력된 상품명으로 검색 시 검색되는지 확인\" )\n    @pytest.mark.parametrize(\"tc_id, search_term\", search_cases)\n    def test_product_search(driver, tc_id, search_term):\n        driver.get(\"https://www.kurly.com/main\")\n        time.sleep(2)\n        print(f\"\uD83D\uDD0D TC {tc_id}: '{search_term}' 검색 테스트 실행 중...\")\n        try:\n            search_box = driver.find_element(By.XPATH, \"//input[@placeholder='검색어를 입력해주세요']\")\n            time.sleep(2)\n            for _ in range(10):\n                search_box.send_keys(Keys.BACKSPACE)\n    \n            search_box.send_keys(search_term)\n            search_box.send_keys(Keys.RETURN)\n            time.sleep(2)\n    \n            product_elements = driver.find_elements(By.XPATH,\"//span[@class='css-1qfsi3d e1yof8003']\")\n            assert len(product_elements) > 0, f\"❌ 검색어 '{search_term}'에 대한 검색 결과가 없음.\"\n    \n            capture_screenshot(driver, f\"{tc_id}_{search_term}_success\", f\"screenshot_search_term\")\n    \n        except Exception as e:\n            capture_screenshot(driver, f\"{tc_id}_{search_term}_failed\", 'screenshots_Search')\n>           pytest.fail(f\"❌ 검색 실패: {str(e)}\")\nE           Failed: ❌ 검색 실패: ❌ 검색어 '과자세트'에 대한 검색 결과가 없음.\nE           assert 0 > 0\nE            +  where 0 = len([])\n\nsrc/tests/ui_tests/test_ui_search.py:37: Failed","steps":[],"attachments":[{"uid":"7f601b37e8b06991","name":"Failure Screenshot","source":"7f601b37e8b06991.png","type":"image/png","size":52524},{"uid":"1bc09215b93175de","name":"stdout","source":"1bc09215b93175de.txt","type":"text/plain","size":161}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1746701603185,"stop":1746701603270,"duration":85},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"UI 테스트"},{"name":"story","value":"상품 검색 테스트"},{"name":"parentSuite","value":"src.tests.ui_tests"},{"name":"suite","value":"test_ui_search"},{"name":"host","value":"fv-az1931-258"},{"name":"thread","value":"2619-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.ui_tests.test_ui_search"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"search_term","value":"'과자세트'"},{"name":"tc_id","value":"'TC_007'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b79ec7ddba42fd37.json","parameterValues":["'과자세트'","'TC_007'"]}