{"name": "test_fail_screenshot", "status": "failed", "statusDetails": {"message": "Failed: 📌 예상된 실패: 잘못된 XPATH로 인해 클릭할 수 없음", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f342b9e43878bfda50c1cb45acdb23e5\")>\n\n    @allure.feature(\"UI 테스트\")\n    @allure.story(\"검색창 실패 테스트\")\n    def test_fail_screenshot(driver):\n        \"\"\"\n        일부러 실패하게 만드는 테스트\n        - 올바르지 않은 요소 선택\n        - 검색창이 없는 요소를 클릭 시도하여 실패 유발\n        \"\"\"\n        driver.get(\"https://www.kurly.com/main\")\n    \n        try:\n>           driver.find_element(By.XPATH, \"//input[@id='wrong_search_id']\").click()\n\nsrc/tests/ui_tests/test_fail_screenshot.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6c5ec87d10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55bc3a0a6e76 \\\\u003Cunknown>\\\\n#18 0x7f91b8c9caa4 \\\\u003Cunknown>\\\\n#19 0x7f91b8d29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='wrong_search_id']\"}\nE         (Session info: chrome=134.0.6998.88); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55bc3a0a7ffa <unknown>\nE       #1 0x55bc39b66970 <unknown>\nE       #2 0x55bc39bb8385 <unknown>\nE       #3 0x55bc39bb85b1 <unknown>\nE       #4 0x55bc39c073c4 <unknown>\nE       #5 0x55bc39bde2bd <unknown>\nE       #6 0x55bc39c0470c <unknown>\nE       #7 0x55bc39bde063 <unknown>\nE       #8 0x55bc39baa328 <unknown>\nE       #9 0x55bc39bab491 <unknown>\nE       #10 0x55bc3a06f42b <unknown>\nE       #11 0x55bc3a0732ec <unknown>\nE       #12 0x55bc3a056a22 <unknown>\nE       #13 0x55bc3a073e64 <unknown>\nE       #14 0x55bc3a03abef <unknown>\nE       #15 0x55bc3a096558 <unknown>\nE       #16 0x55bc3a096736 <unknown>\nE       #17 0x55bc3a0a6e76 <unknown>\nE       #18 0x7f91b8c9caa4 <unknown>\nE       #19 0x7f91b8d29c3c <unknown>\n\nvenv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f342b9e43878bfda50c1cb45acdb23e5\")>\n\n    @allure.feature(\"UI 테스트\")\n    @allure.story(\"검색창 실패 테스트\")\n    def test_fail_screenshot(driver):\n        \"\"\"\n        일부러 실패하게 만드는 테스트\n        - 올바르지 않은 요소 선택\n        - 검색창이 없는 요소를 클릭 시도하여 실패 유발\n        \"\"\"\n        driver.get(\"https://www.kurly.com/main\")\n    \n        try:\n            driver.find_element(By.XPATH, \"//input[@id='wrong_search_id']\").click()\n        except Exception:\n            driver.save_screenshot(\"unexpected_result.png\")\n>           pytest.fail(\"📌 예상된 실패: 잘못된 XPATH로 인해 클릭할 수 없음\")\nE           Failed: 📌 예상된 실패: 잘못된 XPATH로 인해 클릭할 수 없음\n\nsrc/tests/ui_tests/test_fail_screenshot.py:19: Failed"}, "description": "\n    일부러 실패하게 만드는 테스트\n    - 올바르지 않은 요소 선택\n    - 검색창이 없는 요소를 클릭 시도하여 실패 유발\n    ", "attachments": [{"name": "Failure Screenshot", "source": "753afbe7-16bb-4270-84c2-3f8824c9703d-attachment.png", "type": "image/png"}], "start": 1742802427194, "stop": 1742802438411, "uuid": "16d33615-efc2-4fec-b7db-815e0874f7bc", "historyId": "295b0300b44e64aac7e9de8f2dd396ad", "testCaseId": "295b0300b44e64aac7e9de8f2dd396ad", "fullName": "src.tests.ui_tests.test_fail_screenshot#test_fail_screenshot", "labels": [{"name": "story", "value": "검색창 실패 테스트"}, {"name": "feature", "value": "UI 테스트"}, {"name": "parentSuite", "value": "src.tests.ui_tests"}, {"name": "suite", "value": "test_fail_screenshot"}, {"name": "host", "value": "fv-az1050-876"}, {"name": "thread", "value": "2530-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.tests.ui_tests.test_fail_screenshot"}]}